sudo: required
dist: trusty
language: bash

stages:
  - name: Terraform run
  - name: Python test
  - name: Copy artifact
    if: branch = master
services:
  - docker

install:
  - sudo apt-add-repository "deb http://archive.ubuntu.com/ubuntu trusty-backports main restricted universe multiverse"
  - sudo apt-get -qq update
  - sudo apt-get -t trusty-backports install shellcheck
  - sudo pip install awscli  
  - curl -sLo /tmp/terraform.zip https://releases.hashicorp.com/terraform/0.12.5/terraform_0.12.5_linux_amd64.zip
  - unzip /tmp/terraform.zip -d /tmp
  - mv /tmp/terraform ~/bin
  - export PATH="~/bin:$PATH"

jobs:
  include:
    - stage: Terraform run
      env:
        - TF_INPUT=false # No interraction
      script:
        - sed -i -e "s/BUCKETNAME/${terraform_bucket}/g" provision/terraform.tf_template
        - sed -i -e "s/TABLENAME/${terraform_table}/g" provision/terraform.tf_template
        - sed -i -e "s/REGION/${terraform_region}/g" provision/terraform.tf_template
        - mv provision/terraform.tf_template provision/terraform.tf
        - sed -i -e "s/REGION/${terraform_region}/g" provision/terraform.tfvars_template
        - sed -i -e "s/TABLENAME/${terraform_table}/g" provision/terraform.tfvars_template
        - sed -i -e "s/BUCKETNAME/${terraform_bucket}/g" provision/terraform.tfvars_template
        - sed -i -e "s/ENVIRONMENT/${terraform_environment}/g" provision/terraform.tfvars_template
        - mv provision/terraform.tfvars_template provision/terraform.tfvars
        - cd provision
        - terraform init
        - terraform validate
        - ./execute.sh

    - stage: Python test
      script:
        - echo "Check for commit ${TRAVIS_COMMIT} and tag ${TRAVIS_TAG} from branch ${TRAVIS_BRANCH}."
        - echo "This is build number ${TRAVIS_BUILD_NUMBER}, for ${TRAVIS_REPO_SLUG}."
        - mkdir /tmp/config-custom
        - docker pull almerhor/pylint:default
        - docker run --rm -v $(pwd):/pylint -v $(pwd)/test:/tmp/config-custom almerhor/pylint:default py/cloud_control_state_action_ec2.py requirements-custom.txt
    
    - stage: Copy artifact
      language: python
      script:
        - zip cloud_control_state_action_ec2.zip py/cloud_control_state_action_ec2.py
        - aws s3 cp cloud_control_state_action_ec2.zip s3://${artifact_bucket}/${TRAVIS_REPO_SLUG}/$(date +%s)-${TRAVIS_COMMIT}-cloud_control_state_action_ec2.zip
    
        